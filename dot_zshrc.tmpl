# chezmoi:template:line-endings=native

# CodeWhisperer pre block. Keep at the top of this file.
source_if_exists_outside_emacs "${HOME}/Library/Application Support/codewhisperer/shell/zshrc.pre.zsh"

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="half-life"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    adb
    alias-finder
    aliases
    brew
    command-not-found
    docker
    emacs
    fzf
    gh
    git
    gitignore
    git-lfs
    gnu-utils
    gpg-agent
    gradle
    jira
    man
    mosh
    rsync
    sudo
    vscode
    wakeonlan
    z
)

if [[ "$TERM_PROGRAM" = 'WezTerm' ]]; then
    plugins+=(starship)
else
    plugins+=(timer)
fi

if [[ "$(uname)" = 'Darwin' ]]; then
    plugins+=(macos)
fi

source_if_exists $ZSH/oh-my-zsh.sh

# plugin
zstyle ':omz:plugins:alias-finder' autoload yes

source_if_exists $HOMEBREW_PREFIX/share/zsh-autosuggestions/zsh-autosuggestions.zsh
source_if_exists $HOMEBREW_PREFIX/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source_if_exists $HOMEBREW_REPOSITORY/Library/Taps/homebrew/homebrew-command-not-found/handler.sh

source_if_exists /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
source_if_exists /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# vterm
if [[ "$INSIDE_EMACS" = 'vterm' ]] \
    && [[ -n ${EMACS_VTERM_PATH} ]] \
    && [[ -f ${EMACS_VTERM_PATH}/etc/emacs-vterm-zsh.sh ]]; then
	source ${EMACS_VTERM_PATH}/etc/emacs-vterm-zsh.sh
fi

# User configuration

export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='te'
fi

{{- if eq .chezmoi.os "linux" }}
{{-   if (.chezmoi.kernel.osrelease | lower | contains "microsoft") }}
# WSL-specific code
{{-   end }}
{{- end }}

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

alias upb="brew update && brew upgrade"
if [[ -n "$(\emacs --version | grep -q 'mac')" ]]; then
    alias upe="\emacsclient --eval '(package-upgrade-all)' && \emacsclient --eval '(kill-emacs)' && \emacs &"
else
    alias upe="\emacsclient -a='' --eval '(package-upgrade-all)' && \emacsclient --eval '(kill-emacs)' && \emacs --daemon"
fi
alias up="upb && upe"

{{- if eq .chezmoi.hostname "CNSHBL0454" }}
alias ci="export CIRCLECI=true && export CI=true && export key_file_path='/' && export key_alias='' && export key_password='' && export key_alias_password=''"
alias start-zscaler="sudo launchctl bootstrap system /Library/LaunchDaemons/com.zscaler.tunnel.plist"
alias kill-zscaler="sudo launchctl bootout system/com.zscaler.tunnel"
alias zs='export {http,https}_proxy="http://127.0.0.1:9000"'
alias zssg='export {http,https}_proxy="http://10.29.248.90:80"'

location=$(networksetup -getcurrentlocation)
if [[ "$location" = 'Work' ]]; then
    zs
fi
{{- else }}
alias proxy='export {all,tcp,http,https,socks}_proxy="socks5://127.0.0.1:10800"'
{{- end }}

# CodeWhisperer post block. Keep at the bottom of this file.
source_if_exists_outside_emacs "${HOME}/Library/Application Support/codewhisperer/shell/zshrc.post.zsh"

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
source_if_exists "$HOME/.sdkman/bin/sdkman-init.sh"
